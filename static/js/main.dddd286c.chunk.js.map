{"version":3,"sources":["components/Tags.js","columns.js","components/Toolbar.js","components/Header.js","calculations.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["CameraTag","Chip","label","color","size","variant","style","display","this","props","visibility","React","LidarTag","border","RadarTag","RandomTag","name","AnalyzedTag","flexDirection","alignItems","borderRadius","marginTop","backgroundColor","TimelineDot","height","width","background","padding","opacity","margin","marginRight","PartiallyAnalyzedTag","IncompleteAnalyzedTag","useStyles","makeStyles","root","lineHeight","position","whiteSpace","overflow","textOverflow","GridCellExpand","value","wrapper","cellDiv","cellValue","anchorEl","setAnchorEl","classes","showFullCell","setShowFullCell","showPopper","setShowPopper","document","addEventListener","handleKeyDown","removeEventListener","nativeEvent","key","ref","className","onMouseEnter","element","isCurrentlyOverflown","current","scrollHeight","clientHeight","scrollWidth","clientWidth","onMouseLeave","top","Popper","open","marginLeft","Paper","elevation","minHeight","offsetHeight","Typography","renderCellExpand","params","toString","colDef","columns","field","headerName","renderCell","getValue","id","Link","href","target","align","type","valueFormatter","valueFormatted","Number","toLocaleString","sortable","hide","description","tagProps","sensors","split","includes","camera","filter","f","lidar","radar","length","other3","other2","other1","e","checkSensortypes","theme","paddingTop","paddingLeft","paddingRight","textField","QuickSearchToolbar","GridToolbarFilterButton","GridToolbarColumnsButton","GridToolbarExport","TextField","hiddenLabel","onChange","placeholder","InputProps","startAdornment","fontSize","endAdornment","IconButton","title","onClick","clearSearch","right","menuButton","note","window","innerHeight","innerWidth","textTransform","lastUpdate","left","textAlign","Header","setDimensions","handleResize","_","visContribute","visGit","useMediaQuery","json2mq","minWidth","screen","AppBar","Toolbar","subtitle","Button","process","jsonData","require","complete","parComplete","incomplete","legend","trafficSigns","pagination","CustomFooter","TablePagination","component","count","page","onPageChange","rowsPerPage","rows","rowsPerPageOptions","onRowsPerPageChange","customDatagrid","Window","RenderExpandCellGrid","searchText","setSearchText","setPage","setRowsPerPage","Data","setRows","dimension","requestSearch","searchValue","searchRegex","RegExp","replace","filteredRows","row","Object","keys","some","test","DataGrid","disableColumnMenu","sortingOrder","components","Footer","onPageSizeChange","newPageSize","pageSize","componentsProps","toolbar","event","footer","newPage","parseInt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dddd286c.chunk.js","sourcesContent":["import Chip from \"@material-ui/core/Chip\";\nimport * as React from \"react\";\nimport TimelineDot from '@mui/lab/TimelineDot';\n\nexport class CameraTag extends React.Component {\n    render() {\n        return <Chip label=\"camera\"\n                     color=\"primary\"\n                     size=\"small\"\n                     variant=\"outlined\"\n                     style={{display:this.props.visibility}}/>\n    }\n}\n\nexport class LidarTag extends React.Component {\n    render() {\n        return <Chip label=\"lidar\"\n                     size=\"small\"\n                     variant=\"outlined\"\n                     style={{color: 'mediumseagreen', border: '1px solid mediumseagreen', display: this.props.visibility}}/>\n    }\n}\n\nexport class RadarTag extends React.Component {\n    render() {\n        return <Chip label=\"radar\"\n                     size=\"small\"\n                     variant={\"outlined\"}\n                     style={{color: 'maroon', border: '1px solid maroon', display:this.props.visibility}}/>\n    }\n}\n\nexport class RandomTag extends React.Component {\n    render() {\n        return <Chip label={this.props.name}\n                     size={\"small\"}\n                     variant={\"outlined\"}\n                     style={{color: 'peru', border: '1px solid peru', display: this.props.visibility}}/>\n    }\n}\nexport class AnalyzedTag extends React.Component {\n    render() {\n        return <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\", border: \"1px solid white\",\n        borderRadius: \"10px\", marginTop: \"10px\", backgroundColor: \"rgba(0, 0, 0, 0.2)\"}} >\n                            <TimelineDot style={{height: \"3px\", width: \"3px\", background: \"red\", padding: \"0px\",\n                                opacity:\"0.3\", margin: \"1px\", backgroundColor: \"rgba(0, 0, 0, 0.5)\"}}/>\n                            <TimelineDot style={{height: \"3px\", width: \"3px\", background: \"yellow\", padding: \"0px\",\n                                marginRight: \"1px\", opacity:\"0.3\", margin: \"1px\", backgroundColor: \"rgba(0, 0, 0, 0.5)\"}}/>\n                            <TimelineDot color={\"success\"} style={{height: \"3px\", width: \"3px\", padding: \"0px\",\n                                marginRight: \"1px\", margin: \"1px\"}}/>\n                        </div>\n    }\n}\nexport class PartiallyAnalyzedTag extends React.Component {\n    render() {\n        return <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\", border: \"1px solid white\",\n            borderRadius: \"10px\", marginTop: \"10px\", backgroundColor: \"rgba(0, 0, 0, 0.2)\"}} >\n                         <TimelineDot color={\"success\"} style={{height: \"3px\", width: \"3px\", padding: \"0\",\n                         opacity: \"0.3\", margin: \"1px\", backgroundColor: \"rgba(0, 0, 0, 0.5)\"}}/>\n                         <TimelineDot style={{height: \"3px\", width: \"3px\", background: \"yellow\", padding: \"0\", margin:\"1px\"}}/>\n                         <TimelineDot style={{height: \"3px\", width: \"3px\", background: \"red\", padding: \"0\",\n                             opacity: \"0.3\", margin: \"1px\", backgroundColor: \"rgba(0, 0, 0, 0.5)\"}}/>\n                </div>\n\n    }\n}\nexport class IncompleteAnalyzedTag extends React.Component {\n    render() {\n        return <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\", border: \"1px solid white\",\n        borderRadius: \"10px\", marginTop: \"10px\", backgroundColor: \"rgba(0, 0, 0, 0.2)\"}} >\n                        <TimelineDot style={{height: \"3px\", width: \"3px\", background: \"red\", padding: \"0\", margin: \"1px\"}}/>\n                         <TimelineDot style={{height: \"3px\", width: \"3px\", background: \"yellow\", padding: \"0\", margin:\"1px\",\n                         opacity: \"0.3\", backgroundColor: \"rgba(0, 0, 0, 0.5)\"}}/>\n                        <TimelineDot color={\"success\"} style={{height: \"3px\", width: \"3px\", padding: \"0\", margin:\"1px\",\n                            opacity: \"0.3\", backgroundColor: \"rgba(0, 0, 0, 0.5)\"}}/>\n                     </div>\n    }\n}\n","import * as React from 'react';\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\"\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport { makeStyles } from '@material-ui/styles';\nimport {CameraTag, LidarTag, RadarTag, RandomTag, AnalyzedTag, PartiallyAnalyzedTag, IncompleteAnalyzedTag} from \"./components/Tags\";\n\n\nfunction isOverflown(element) {\n    return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\n\n/***\n *\n *\n * @param description: contains the input of the field 'sensors' of the data sets\n * @param tagProps: properties of 6 tags for sensor types: 'camera', 'radar', 'lidar', 'other1', 'other2', 'other3'\n * @returns {string[]} returns array that contains all sensors that are NOT camera, lidar or radar\n *\n *\n * Function takes info on sensors in the respective data set; checks whether camera, lidar or radar are included;\n * returns info on up to 3 additional sensors\n */\nfunction checkSensortypes(description, tagProps){\n    try {\n        let sensors = description.split(\", \");\n        if (sensors.includes(\"camera\")) {\n            tagProps.camera='visible';\n            sensors = sensors.filter(function(f) { return f !== 'camera' });\n        }\n        if (sensors.includes(\"lidar\")) {\n            tagProps.lidar='visible';\n            sensors = sensors.filter(function(f) { return f !== 'lidar' });\n        }\n        if (sensors.includes(\"radar\")) {\n            tagProps.radar='visible';\n            sensors = sensors.filter(function(f) { return f !== 'radar' });\n        }\n        if (sensors.length===3) {\n            tagProps.other3='visible';\n            tagProps.other2 = 'visible';\n            tagProps.other1 = 'visible';\n        } else if (sensors.length===2) {\n            tagProps.other2 = 'visible';\n            tagProps.other1 = 'visible';\n        } else if ((sensors.length===1) && (sensors[0]!==\"\")) {\n            tagProps.other1 = 'visible';\n        }\n        return (sensors)\n    }\n    catch (e) {\n    }\n}\n\n\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        alignItems: 'center',\n        lineHeight: '24px',\n        width: '100%',\n        height: '100%',\n        position: 'relative',\n        display: 'flex',\n        '& .cellValue': {\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n        },\n    },\n}));\n\nconst GridCellExpand = React.memo(function GridCellExpand(props) {\n    const { width, value } = props;\n    const wrapper = React.useRef(null);\n    const cellDiv = React.useRef(null);\n    const cellValue = React.useRef(null);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const classes = useStyles();\n    const [showFullCell, setShowFullCell] = React.useState(false);\n    const [showPopper, setShowPopper] = React.useState(false);\n\n    const handleMouseEnter = () => {\n        const isCurrentlyOverflown = isOverflown(cellValue.current);\n        setShowPopper(isCurrentlyOverflown);\n        setAnchorEl(cellDiv.current);\n        setShowFullCell(true);\n    };\n\n    const handleMouseLeave = () => {\n        setShowFullCell(false);\n    };\n\n    React.useEffect(() => {\n        if (!showFullCell) {\n            return undefined;\n        }\n\n        function handleKeyDown(nativeEvent) {\n            // IE11, Edge (prior to using Bink?) use 'Esc'\n            if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n                setShowFullCell(false);\n            }\n        }\n\n        document.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [setShowFullCell, showFullCell]);\n\n    return (\n        <div\n            ref={wrapper}\n            className={classes.root}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n        >\n            <div\n                ref={cellDiv}\n                style={{\n                    height: 1,\n                    width,\n                    display: 'block',\n                    position: 'absolute',\n                    top: 0,\n                }}\n            />\n            <div ref={cellValue} className=\"cellValue\">\n                {value}\n            </div>\n            {showPopper && (\n                <Popper\n                    open={showFullCell && anchorEl !== null}\n                    anchorEl={anchorEl}\n                    style={{ width, marginLeft: -17 }}\n                >\n                    <Paper\n                        elevation={1}\n                        style={{ minHeight: wrapper.current.offsetHeight - 3 }}\n                    >\n                        <Typography variant=\"body2\" style={{ padding: 8 }}>\n                            {value}\n                        </Typography>\n                    </Paper>\n                </Popper>\n            )}\n        </div>\n    );\n});\n\nGridCellExpand.propTypes = {\n    value: PropTypes.string.isRequired,\n    width: PropTypes.number.isRequired,\n};\n\nfunction renderCellExpand(params) {\n    if(params.value!== \"-\" ) {\n        return (\n            <GridCellExpand\n                value={params.value ? params.value.toString() : ''}\n                width={params.colDef.width}\n            />\n        );\n    }\n    return \"\";\n}\n\nrenderCellExpand.propTypes = {\n    /**\n     * The column of the row that the current cell belongs to.\n     */\n    colDef: PropTypes.any.isRequired,\n    /**\n     * The cell value, but if the column has valueGetter, use getValue.\n     */\n    value: PropTypes.oneOfType([\n        PropTypes.instanceOf(Date),\n        PropTypes.number,\n        PropTypes.object,\n        PropTypes.string,\n        PropTypes.bool,\n    ]),\n};\n\nconst columns = [\n    {\n        field: 'id',\n        headerName: 'Name',\n        width: 240,\n        renderCell: (params) => {\n            if (params.getValue(params.id, 'completionStatus') ===\"complete\") {\n                return(\n                <div style={{display: \"flex\", flexDirection: \"row\", alignItems: \"flex-start\"}}>\n                    <AnalyzedTag/>\n                    <strong>\n                        <Link\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"small\"\n                            style={{marginLeft: 6}}\n                            href={params.getValue(params.id, 'href') || ''}\n                            target={'_blank'}\n                        >\n                            {params.getValue(params.id, 'id') || ''}\n                        </Link>\n                    </strong>\n                </div>)\n            }\n            else if (params.getValue(params.id, 'completionStatus') ===\"partially Complete\"){\n                return (\n                    <div style={{display: \"flex\", flexDirection: \"row\", alignItems: \"flex-start\"}}>\n                        <PartiallyAnalyzedTag/>\n                        <strong>\n                            <Link\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"small\"\n                                style={{marginLeft: 6}}\n                                href={params.getValue(params.id, 'href') || ''}\n                                target={'_blank'}\n                            >\n                                {params.getValue(params.id, 'id') || ''}\n                            </Link>\n                        </strong>\n                    </div>\n                )\n            }\n            else if (params.getValue(params.id, 'completionStatus') ===\"incomplete\")\n                return (\n                    <div style={{display: \"flex\", flexDirection: \"row\", alignItems: \"flex-start\"}}>\n                        <IncompleteAnalyzedTag/>\n                        <strong>\n                            <Link\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"small\"\n                                style={{marginLeft: 6}}\n                                href={params.getValue(params.id, 'href') || ''}\n                                target={'_blank'}\n                            >\n                                {params.getValue(params.id, 'id') || ''}\n                            </Link>\n                        </strong>\n                    </div>\n                )\n        },\n    },\n    {\n        field: 'citationCount',\n        headerName: 'N° Citations',\n        width: 150,\n        align: 'right',\n        type: 'number',\n        valueFormatter: (params) => {\n            const valueFormatted = Number(params.value).toLocaleString();\n            if (valueFormatted !== \"0\" && valueFormatted !== \"NaN\")\n                return `${valueFormatted}`;\n            else\n                return \"\";\n        }\n    },\n    {\n        field: 'size_hours',\n        headerName: 'Size [h]',\n        width: 105,\n        align: 'right',\n        type: \"number\",\n        valueFormatter: (params) => {\n            const valueFormatted = Number(params.value).toLocaleString();\n            if (valueFormatted!==\"0\" && valueFormatted!==\"NaN\")\n                return `${valueFormatted}`;\n            else\n                return \"\";\n        },\n    },\n    {\n        field: 'size_storage',\n        headerName: 'Size [GB]',\n        width: 120,\n        align: 'right',\n        type: \"number\",\n        valueFormatter: (params) => {\n            const valueFormatted = Number(params.value).toLocaleString();\n            if (valueFormatted!==\"0\" && valueFormatted!==\"NaN\")\n                return `${valueFormatted}`;\n            else\n                return \"\";\n        },\n    },\n    {\n        field: 'frames',\n        headerName: 'Frames',\n        width: 110,\n        align: 'right',\n        type: \"number\",\n        valueFormatter: (params) => {\n            const valueFormatted = Number(params.value).toLocaleString();\n            if (valueFormatted!==\"0\" && valueFormatted!==\"NaN\")\n                return `${valueFormatted}`;\n            else\n                return \"\";\n        },\n    },\n    {\n        field: 'numberOfScenes',\n        headerName: 'N° Scenes',\n        width: 130,\n        align: 'right',\n        type: \"number\",\n        sortable: true,\n        valueFormatter: (params) => {\n            const valueFormatted = Number(params.value).toLocaleString();\n            if (valueFormatted!==\"0\" && valueFormatted!==\"NaN\")\n                return `${valueFormatted}`;\n            else\n                return \"\";\n        },\n    },\n    {\n        field: 'samplingRate',\n        headerName: 'Sampling Rate [Hz]',\n        width: 180,\n        hide: true,\n        type: \"number\",\n        valueFormatter: (params) => {\n            const valueFormatted = Number(params.value).toLocaleString();\n            if (valueFormatted!==\"0\" && valueFormatted!==\"NaN\")\n                return `${valueFormatted}`;\n            else\n                return \"\";\n        },\n    },\n    {\n        field: 'lengthOfScenes',\n        headerName: 'Scene Length [s]',\n        width: 165,\n        align: 'right',\n        type: \"number\",\n        valueFormatter: (params) => {\n            const valueFormatted = Number(params.value).toLocaleString();\n            if (valueFormatted!==\"0\" && valueFormatted!==\"NaN\")\n                return `${valueFormatted}`;\n            else\n                return \"\";\n        },\n    },\n    {\n        field: 'sensors',\n        headerName: 'Sensortypes',\n        description: 'types of sensors used in the dataset',\n        type: 'string',\n        width: 310,\n        sortable: false,\n        renderCell: (params) => {\n            const valueFormatted = params.value;\n            const tagProps = {\n                'camera': 'none',\n                'lidar': 'none',\n                'radar': 'none',\n                'other1': 'none',\n                'other2': 'none',\n                'other3': 'none'\n            };\n            const sensors = checkSensortypes(valueFormatted, tagProps);\n\n            if (sensors)\n                return (\n                    <div>\n                        <CameraTag visibility={tagProps.camera}/>\n                        <LidarTag visibility={tagProps.lidar}/>\n                        <RadarTag visibility={tagProps.radar}/>\n                        <RandomTag visibility={tagProps.other1} name={sensors[0]}/>\n                        <RandomTag visibility={tagProps.other2} name={sensors[1]}/>\n                        <RandomTag visibility={tagProps.other3} name={sensors[2]}/>\n                    </div>\n                );\n        },\n    },\n    {\n        field: \"sensorDetail\",\n        headerName: \"Sensors - Details\",\n        description: 'details on used sensors',\n        type: \"string\",\n        width: 400,\n        sortable: false,\n        hide: true,\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'benchmark',\n        headerName: 'Benchmark',\n        description: 'This column has a value getter and is not sortable.',\n        sortable: false,\n        width: 360,\n        hide: true,\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'annotations',\n        headerName: 'Annotations',\n        width: 350,\n        type: \"String\",\n        sortable: false,\n        hide: true,\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'location',\n        headerName: 'Location',\n        width: 380,\n        hide: true,\n        type: \"string\",\n        sortable: false,\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'rawData',\n        headerName: 'Provide raw data',\n        width: 150,\n        hide: true,\n        type: \"string\",\n        sortable: false,\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'licensing',\n        headerName: 'Licensing',\n        width: 350,\n        sortable: false,\n        type: \"string\",\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'relatedDatasets',\n        headerName: 'Related Datasets',\n        width: 180,\n        hide: true,\n        type: \"string\",\n        sortable: false,\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'publishDate',\n        headerName: 'Publish Date',\n        width: 150,\n        hide: true,\n        type: \"date\",\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'lastUpdate',\n        headerName: 'Last Update',\n        width: 150,\n        hide: true,\n        type: \"date\",\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'relatedPaper',\n        headerName: 'Related Paper',\n        width: 150,\n        hide: false,\n        type: \"string\",\n        renderCell: (params) => (\n            <strong>\n                <Link\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    style={{marginLeft: 16}}\n                    href={params.getValue(params.id, 'relatedPaper') || ''}\n                    target={'_blank'}\n                >\n                    {params.getValue(params.id, 'paperTitle') || ''}\n                </Link>\n            </strong>\n        ),\n    },\n];\n\nexport { columns };\n\n","import { makeStyles } from '@material-ui/core/styles';\nimport {\n    GridToolbarFilterButton,\n    GridToolbarColumnsButton,\n    GridToolbarExport\n} from '@mui/x-data-grid';\nimport TextField from '@material-ui/core/TextField';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingTop: 5,\n        paddingLeft: 5,\n        paddingRight: 5,\n        display: 'flex',\n    },\n    textField: {\n        paddingLeft: 5,\n    },\n}));\n\nexport function QuickSearchToolbar(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <GridToolbarFilterButton />\n                <GridToolbarColumnsButton />\n                <GridToolbarExport />\n            </div>\n            <TextField hiddenLabel size={\"small\"}\n                color={\"info\"}\n                value={props.value}\n                onChange={props.onChange}\n                placeholder=\"search…\"\n                className={classes.textField}\n                InputProps={{\n                    startAdornment: <SearchIcon fontSize=\"small\" color={\"primary\"} />,\n                    endAdornment: (\n                        <IconButton\n                            title=\"Clear\"\n                            aria-label=\"Clear\"\n                            size=\"small\"\n                            style={{ visibility: props.value ? 'visible' : 'hidden' }}\n                            onClick={props.clearSearch}\n                            color={\"primary\"}\n                        >\n                            <ClearIcon fontSize=\"small\" color={\"primary\"} />\n                        </IconButton>\n                    ),\n                }}\n            />\n        </div>\n    );\n}\n\nQuickSearchToolbar.propTypes = {\n    clearSearch: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired,\n};\n","import * as React from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport json2mq from 'json2mq';\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    textField: {\n        position: \"absolute\",\n        right: \"1%\",\n    },\n    menuButton: {\n\n    },\n    note: {\n        position: \"absolute\",\n        right: \"0.5%\",\n        top: window.innerHeight*0.01,\n        fontSize: 0.007*window.innerWidth,\n        border: \"1px solid white\",\n        borderRadius: \"5px\",\n        paddingLeft: \"0.25%\",\n        paddingRight: \"0.25%\",\n        color: \"white\",\n        textTransform: \"none\"\n    },\n    lastUpdate: {\n        position: \"absolute\",\n        left: \"0.5%\",\n        top: window.innerHeight*0.01,\n        fontSize: 0.007*window.innerWidth,\n        border: \"1px solid white\",\n        borderRadius: \"5px\",\n        padding: \"0.5%\",\n        color: \"#3f51b5\",\n        textTransform: \"none\",\n        backgroundColor: \"white\",\n    },\n    title: {\n        margin: 'auto',\n        textAlign: 'center'\n    },\n}));\n\nexport function Header(props) {\n    const classes = useStyles();\n\n    const [, setDimensions] = React.useState({\n        height: window.innerHeight,\n        width: window.innerWidth\n    });\n    React.useEffect(() => {\n        function handleResize() {\n            setDimensions({\n                height: window.innerHeight,\n                width: window.innerWidth\n            })\n        }\n        window.addEventListener('resize', handleResize);\n        return _ => {\n            window.removeEventListener('resize', handleResize)\n        }\n    });\n\n\n    const matches = useMediaQuery(\n        json2mq({\n            minWidth: 0.535*window.screen.width\n        }),\n    );\n    let visContribute = 'visible';\n    let visGit = 'hidden';\n    if (matches === false) {\n        visContribute  = 'hidden';\n        visGit = 'visible';\n    }\n\n\n\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <div className={classes.title}>\n                    <Typography variant=\"h5\">\n                    {props.title}\n                    </Typography>\n                    <Typography variant=\"body1\">\n                        {props.subtitle}\n                    </Typography>\n                </div>\n\n                <Button className={classes.note} target={'_blank'} style={{visibility: visGit}}\n                        href={\"https://github.com/daniel-bogdoll/ad-datasets\"}>\n                    *GitHub\n                </Button>\n                <Button className={classes.note} target={'_blank'} style={{visibility: visContribute}}\n                        href={\"https://github.com/daniel-bogdoll/ad-datasets\"}>\n                    *Could not find your dataset? <br/> Simply create a pull request ;)\n                </Button>\n                <Typography className={classes.lastUpdate}>\n                    Last Update: {process.env.REACT_APP_GIT_SHA}\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    )\n\n}\n","const jsonData= require('./data_sorted.json');\nexport let complete = 0;\nexport let parComplete = 0;\nexport let incomplete = 0;\n\n\nfunction f() {\n    for (let key in jsonData) {\n        if(jsonData[key]['completionStatus']===\"complete\"){\n            complete++;\n        }\n        else if(jsonData[key]['completionStatus']===\"partially Complete\"){\n            parComplete++;\n        }\n        else if(jsonData[key]['completionStatus']===\"incomplete\"){\n            incomplete++;\n        }\n    }\n}\n\nf();\n\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {AnalyzedTag, IncompleteAnalyzedTag, PartiallyAnalyzedTag} from \"./Tags\";\nimport PropTypes from 'prop-types';\nimport { Toolbar, Typography } from '@mui/material';\nimport {complete, incomplete, parComplete} from \"../calculations\";\nimport TablePagination from '@material-ui/core/TablePagination';\n\nconst useStyles = makeStyles((theme) => ({\n    legend: {\n        left: \"0\",\n        position: \"absolute\",\n        fontSize: \"10px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"flex-start\",\n    },\n    trafficSigns: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"flex-start\",\n        marginLeft: \"2%\",\n        fontSize: \"10px\"\n    },\n    pagination: {\n        alignItems: \"center\",\n        position: \"absolute\",\n        right: \"2%\"\n    }\n}));\n\n\nexport function CustomFooter (props) {\n    const classes = useStyles();\n    return (\n        <Toolbar position=\"static\" variant={'dense'} name={\"footer\"}>\n            <Typography className={classes.legend}>\n                <div className={classes.trafficSigns}>\n                    <AnalyzedTag/>\n                    <p>Number of Completely Analyzed Datasets: {complete} </p>\n                </div>\n                <div className={classes.trafficSigns}>\n                    <PartiallyAnalyzedTag/>\n                    <p>Number of Partially Analyzed Datasets: {parComplete} </p>\n                </div>\n                <div className={classes.trafficSigns}>\n                    <IncompleteAnalyzedTag/>\n                    <p>Number of Datasets Missing Essential Information: {incomplete} </p>\n                </div>\n            </Typography>\n            <TablePagination\n                className = {classes.pagination}\n                component=\"div\"\n                count = {props.count}\n                page = {props.page}\n                onPageChange = {props.onPageChange}\n                rowsPerPage =  {props.rows}\n                rowsPerPageOptions =  {[10, 20, 40, 100]}\n                onRowsPerPageChange = {props.onRowsPerPageChange}\n            />\n        </Toolbar>\n    )\n}\nCustomFooter.propTypes = {\n    clearSearch: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    count: PropTypes.number.isRequired,\n    page: PropTypes.number.isRequired,\n};","import * as React from 'react';\nimport { DataGrid} from '@mui/x-data-grid';\nimport {columns} from './columns.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Data from './data_sorted.json';\nimport {QuickSearchToolbar} from \"./components/Toolbar\";\nimport {Header} from \"./components/Header\";\nimport {CustomFooter} from \"./components/Footer\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    customDatagrid: {\n        height: window.innerHeight*0.5,\n        width: Window.innerWidth\n    },\n    legend: {\n        left: \"1%\",\n        position: \"absolute\",\n        fontSize: \"10px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"flex-start\",\n    },\n    trafficSigns: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"flex-start\",\n        marginLeft: \"2%\"\n    },\n    pagination: {\n        alignItems: \"center\",\n    }\n}));\n\n\nfunction escapeRegExp(value) {\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nexport default function RenderExpandCellGrid() {\n    const classes = useStyles();\n\n    const [searchText, setSearchText] = React.useState('');\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(20);\n    const [rows, setRows] = React.useState(Data);\n    const [dimension, setDimensions] = React.useState({\n        height: window.innerHeight,\n        width: window.innerWidth\n    });\n\n    const onChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (value) => {\n        setRowsPerPage(parseInt(value, 10));\n        setPage(0);\n    };\n\n    const requestSearch = (searchValue) => {\n        setSearchText(searchValue);\n        const searchRegex = new RegExp(escapeRegExp(searchValue), 'i');\n        const filteredRows = Data.filter((row) => {\n            return Object.keys(row).some((field) => {\n                return searchRegex.test(row[field].toString());\n            });\n        });\n        setRows(filteredRows)\n    };\n\n    React.useEffect(() => {\n        function handleResize() {\n            setDimensions({\n                height: window.innerHeight,\n                width: window.innerWidth\n            })\n        }\n        window.addEventListener('resize', handleResize);\n        return _ => {\n            window.removeEventListener('resize', handleResize)\n        }\n    });\n\n    return (\n        <div style={{width: dimension.width, height: '90vh'}}>\n            <Header title={'ad-datasets'} subtitle={'Complete* and curated list of autonomous driving related datasets'}/>\n\n\n            <DataGrid rows={rows} columns={columns} disableColumnMenu={true} className={classes.customDatagrid}\n                      sortingOrder={['desc', 'asc']} page={page}\n                      components={{ Toolbar: QuickSearchToolbar, Footer: CustomFooter}}\n                      onPageSizeChange={(newPageSize) => setPage(newPageSize)}\n                      pageSize={rowsPerPage}\n                      componentsProps={{\n                          toolbar: {\n                              value: searchText,\n                              onChange: (event) => requestSearch(event.target.value),\n                              clearSearch: () => requestSearch(''),\n                          },\n                          footer: {\n                              count: rows.length,\n                              page: page,\n                              rows: rowsPerPage,\n                              onPageChange: onChangePage,\n                              onRowsPerPageChange: (event) => handleChangeRowsPerPage(event.target.value)\n                          }\n                      }}\n            />\n        </div>\n    );\n}\n\n\n\n\n\n\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}